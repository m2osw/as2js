// start
[

    // A class with some valid invariants
    {
        //"verbose": true,
        "slow": true,
        "name": "class with a valid invariant contract",
        "program": "package \"valid.invariant\"\n\
{\n\
    class advanced_class extends base_class, orange_class implements archiver, blue_class\n\
    {\n\
        public virtual function save_data(var in const v1: some.strange.type, var in const v2: integer)\n\
            : void\n\
        {\n\
            this.value_one = v1;\n\
            this.value_two = v2;\n\
        }\n\
\n\
        invariant value_two_is_integer: typeof this.value_two == \"Number\",\n\
                  value_one_is_positive: this.value_one > 0;\n\
    };\n\
};\n",
        "expected messages": [
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 8,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 9,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "PACKAGE",
                            "label": "valid.invariant",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CLASS",
                                            "label": "advanced_class",
                                            "children": [
                                                {
                                                    "node type": "EXTENDS",
                                                    "children": [
                                                        {
                                                            "node type": "LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "base_class"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "orange_class"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "IMPLEMENTS",
                                                    "children": [
                                                        {
                                                            "node type": "LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "archiver"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "blue_class"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "FUNCTION",
                                                            "label": "save_data",
                                                            "flags": "FUNCTION_FLAG_VOID",
                                                            "attribute node": [
                                                                {
                                                                    "node type": "PUBLIC"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "virtual"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "node type": "PARAMETERS",
                                                                    "children": [
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v1",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "MEMBER",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "some"
                                                                                                        },
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "strange"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "type"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v2",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "DIRECTIVE_LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "ASSIGNMENT",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v1"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "ASSIGNMENT",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_two"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v2"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "INVARIANT",
                                                            "children": [
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "value_two_is_integer",
                                                                    "children": [
                                                                        {
                                                                            "node type": "EQUAL",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPEOF",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "THIS"
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "value_two"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "STRING",
                                                                                    "label": "Number"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "value_one_is_positive",
                                                                    "children": [
                                                                        {
                                                                            "node type": "GREATER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "INT64",
                                                                                    "integer": 0
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class with an invalid invariant
    {
        //"verbose": true,
        "name": "class with a valid invariant contract (missing identifier)",
        "program": "package \"valid.invariant\"\n\
{\n\
    class advanced_class extends base_class\n\
    {\n\
        public virtual function save_data(var in const v1: some.strange.type, var in const v2: integer)\n\
            : void\n\
        {\n\
            this.value_one = v1;\n\
            this.value_two = v2;\n\
        }\n\
\n\
        invariant : typeof this.value_two == \"Number\",\n\
                  value_one_is_positive: this.value_one > 0;\n\
    };\n\
};\n",
        "expected messages": [
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 8,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 9,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "message level": 2,
                "error code": "INVALID_LABEL",
                "line #": 12,
                "message": "'INVARIANT' must be followed by a list of labeled expressions."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "PACKAGE",
                            "label": "valid.invariant",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CLASS",
                                            "label": "advanced_class",
                                            "children": [
                                                {
                                                    "node type": "EXTENDS",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "base_class"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "FUNCTION",
                                                            "label": "save_data",
                                                            "flags": "FUNCTION_FLAG_VOID",
                                                            "attribute node": [
                                                                {
                                                                    "node type": "PUBLIC"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "virtual"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "node type": "PARAMETERS",
                                                                    "children": [
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v1",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "MEMBER",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "some"
                                                                                                        },
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "strange"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "type"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v2",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "DIRECTIVE_LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "ASSIGNMENT",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v1"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "ASSIGNMENT",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_two"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v2"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "INVARIANT",
                                                            "children": [
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "",
                                                                    "children": [
                                                                        {
                                                                            "node type": "EQUAL",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPEOF",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "THIS"
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "value_two"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "STRING",
                                                                                    "label": "Number"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "value_one_is_positive",
                                                                    "children": [
                                                                        {
                                                                            "node type": "GREATER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "INT64",
                                                                                    "integer": 0
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class with an invalid invariant
    {
        //"verbose": true,
        "name": "class with a valid invariant contract (missing colon)",
        "program": "package \"valid.invariant\"\n\
{\n\
    class advanced_class extends base_class\n\
    {\n\
        public virtual function save_data(var in const v1: some.strange.type, var in const v2: integer)\n\
            : void\n\
        {\n\
            this.value_one = v1;\n\
            this.value_two = v2;\n\
        }\n\
\n\
        invariant value_two_is_a_number typeof this.value_two == \"Number\",\n\
                  value_one_is_positive: this.value_one > 0;\n\
    };\n\
};\n",
        "expected messages": [
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 8,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 9,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "message level": 2,
                "error code": "COLON_EXPECTED",
                "line #": 12,
                "message": "the 'INVARIANT' label must be followed by a colon (:)."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "PACKAGE",
                            "label": "valid.invariant",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CLASS",
                                            "label": "advanced_class",
                                            "children": [
                                                {
                                                    "node type": "EXTENDS",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "base_class"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "FUNCTION",
                                                            "label": "save_data",
                                                            "flags": "FUNCTION_FLAG_VOID",
                                                            "attribute node": [
                                                                {
                                                                    "node type": "PUBLIC"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "virtual"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "node type": "PARAMETERS",
                                                                    "children": [
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v1",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "MEMBER",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "some"
                                                                                                        },
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "strange"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "type"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v2",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "DIRECTIVE_LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "ASSIGNMENT",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v1"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "ASSIGNMENT",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_two"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v2"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "INVARIANT",
                                                            "children": [
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "value_two_is_a_number",
                                                                    "children": [
                                                                        {
                                                                            "node type": "EQUAL",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPEOF",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "THIS"
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "value_two"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "STRING",
                                                                                    "label": "Number"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "value_one_is_positive",
                                                                    "children": [
                                                                        {
                                                                            "node type": "GREATER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "INT64",
                                                                                    "integer": 0
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class without a name
    {
        //"verbose": true,
        "name": "class without a name",
        "program": "package \"missing.name\"\n\
{\n\
    class\n\
    {\n\
        public virtual function save_data(var in const v1: some.strange.type, var in const v2: integer)\n\
            : void\n\
        {\n\
            this.value_one /= v1;\n\
            this.value_two -= v2;\n\
        }\n\
\n\
        invariant value_two_is_a_number: typeof this.value_two == \"Number\",\n\
                  value_one_is_positive: this.value_one > 0;\n\
    };\n\
};\n",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INVALID_CLASS",
                "line #": 4,
                "message": "the name of the class is expected after the keyword 'class'."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "PACKAGE",
                            "label": "missing.name",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CLASS",
                                            "label": "",
                                            "children": [
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "FUNCTION",
                                                            "label": "save_data",
                                                            "flags": "FUNCTION_FLAG_VOID",
                                                            "attribute node": [
                                                                {
                                                                    "node type": "PUBLIC"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "virtual"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "node type": "PARAMETERS",
                                                                    "children": [
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v1",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "MEMBER",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "some"
                                                                                                        },
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "strange"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "type"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v2",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "DIRECTIVE_LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "ASSIGNMENT_DIVIDE",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v1"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "ASSIGNMENT_SUBTRACT",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_two"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v2"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "INVARIANT",
                                                            "children": [
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "value_two_is_a_number",
                                                                    "children": [
                                                                        {
                                                                            "node type": "EQUAL",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPEOF",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "THIS"
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "value_two"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "STRING",
                                                                                    "label": "Number"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "value_one_is_positive",
                                                                    "children": [
                                                                        {
                                                                            "node type": "GREATER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "INT64",
                                                                                    "integer": 0
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class with an invalid extend
    {
        //"verbose": true,
        "name": "class with an invalid extend",
        "program": "package \"missing.name\"\n\
{\n\
    class bad_extend extends implements prudent\n\
    {\n\
        public virtual function save_data(var in const v1: some.strange.type, var in const v2: integer)\n\
            : void\n\
        {\n\
            this.value_one *= v1;\n\
            this.value_two += v2;\n\
        }\n\
\n\
        invariant value_two_is_a_number: typeof this.value_two == \"Number\",\n\
                  value_one_is_positive: this.value_one > 0;\n\
    };\n\
};\n",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INVALID_EXPRESSION",
                "line #": 3,
                "message": "unexpected token 'IMPLEMENTS' found in an expression."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "PACKAGE",
                            "label": "missing.name",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CLASS",
                                            "label": "bad_extend",
                                            "children": [
                                                {
                                                    "node type": "EXTENDS",
                                                    "children": [
                                                        {
                                                            "node type": "FALSE"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "IMPLEMENTS",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "prudent"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "FUNCTION",
                                                            "label": "save_data",
                                                            "flags": "FUNCTION_FLAG_VOID",
                                                            "attribute node": [
                                                                {
                                                                    "node type": "PUBLIC"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "virtual"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "node type": "PARAMETERS",
                                                                    "children": [
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v1",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "MEMBER",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "some"
                                                                                                        },
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "strange"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "type"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "v2",
                                                                            "flags": "PARAM_FLAG_CONST,PARAM_FLAG_IN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "DIRECTIVE_LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "ASSIGNMENT_MULTIPLY",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v1"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "ASSIGNMENT_ADD",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_two"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "v2"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "INVARIANT",
                                                            "children": [
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "value_two_is_a_number",
                                                                    "children": [
                                                                        {
                                                                            "node type": "EQUAL",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPEOF",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "THIS"
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "value_two"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "STRING",
                                                                                    "label": "Number"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "LABEL",
                                                                    "label": "value_one_is_positive",
                                                                    "children": [
                                                                        {
                                                                            "node type": "GREATER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "THIS"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "value_one"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "INT64",
                                                                                    "integer": 0
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class not terminated properly
    {
        //"verbose": true,
        "name": "class not finished with '};'",
        "program": "class unfinished\n\
    {\n\
        function ignore_this_one(p1, p2)\n\
        {\n\
            return Math.sqrt(p1 * p1 + p2 * p2);\n\
        }\n\
    ;\n",
        "expected messages": [
            {
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 8,
                "message": "'}' expected to close the 'class' definition."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unfinished",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                            "label": "ignore_this_one",
                                            "children": [
                                                {
                                                    "node type": "PARAMETERS",
                                                    "children": [
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "p1"
                                                        },
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "p2"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "CALL",
                                                                    "children": [
                                                                        {
                                                                            "node type": "MEMBER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "Math"
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "sqrt"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "LIST",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "ADD",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MULTIPLY",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "p1"
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "p1"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "node type": "MULTIPLY",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "p2"
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "p2"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class forward declaration without the proper ';'
    {
        //"verbose": true,
        "name": "forward class declaration not finished with ';'",
        "program": "class unfinished class good;",
        "expected messages": [
            {
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 1,
                "message": "'{' expected to start the 'class' definition."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unfinished"
                        },
                        {
                            "node type": "CLASS",
                            "label": "good"
                        }
                    ]
                }
            ]
        }
    },

    // A class definition without the name followed by the class definition
    {
        //"verbose": true,
        "name": "class with a missing name followed by '{'",
        "program": "class { function a() { return b; } };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INVALID_CLASS",
                "line #": 1,
                "message": "the name of the class is expected after the keyword 'class'."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                            "label": "a",
                                            "children": [
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "b"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class definition without the name followed by 'extends'
    {
        //"verbose": true,
        "name": "class with a missing name followed by 'extends'",
        "program": "class extends stable_base { function a() { return b; } };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INVALID_CLASS",
                "line #": 1,
                "message": "the name of the class is expected after the keyword 'class'."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "",
                            "children": [
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "stable_base"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                            "label": "a",
                                            "children": [
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "b"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class definition without the name followed by 'implements'
    {
        //"verbose": true,
        "name": "class with a missing name followed by 'implements'",
        "program": "class implements date_and_time { function a() { return b; } };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INVALID_CLASS",
                "line #": 1,
                "message": "the name of the class is expected after the keyword 'class'."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "",
                            "children": [
                                {
                                    "node type": "IMPLEMENTS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "date_and_time"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                            "label": "a",
                                            "children": [
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "b"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // An empty class should be supported
    {
        //"verbose": true,
        "name": "an empty class",
        "program": "class totally_empty {};",
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "totally_empty",
                            "children": [
                                {
                                    "node type": "EMPTY"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class defined inside a package
    {
        //"verbose": true,
        "name": "class defined inside a package",
        "program": "native package Global { class Boolean extends Object { function add (rhs: Integer) { return this.data + rhs; } private var data; }; }",
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "PACKAGE",
                            "label": "Global",
                            "attribute node": [
                                {
                                    "node type": "NATIVE"
                                }
                            ],
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CLASS",
                                            "label": "Boolean",
                                            "children": [
                                                {
                                                    "node type": "EXTENDS",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "Object"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "FUNCTION",
                                                            "label": "add",
                                                            "children": [
                                                                {
                                                                    "node type": "PARAMETERS",
                                                                    "children": [
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "rhs",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "Integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "DIRECTIVE_LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "RETURN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "ADD",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MEMBER",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "THIS"
                                                                                                },
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "data"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "rhs"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "VAR",
                                                            "attribute node": [
                                                                {
                                                                    "node type": "PRIVATE"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "node type": "VARIABLE",
                                                                    "label": "data"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class defined from another class and 3 interfaces
    {
        //"verbose": true,
        "name": "class derived from another and three interfaces",
        "program": "package Global { interface A {}; interface B {}; native class Test extends Object, Math implements A, B { function add (rhs: Integer) { return this.data * A.getA() + rhs * Math.sqrt(B.getB()); } private var data; }; }",
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "PACKAGE",
                            "label": "Global",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "INTERFACE",
                                            "label": "A",
                                            "children": [
                                                {
                                                    "node type": "EMPTY"
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "INTERFACE",
                                            "label": "B",
                                            "children": [
                                                {
                                                    "node type": "EMPTY"
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "CLASS",
                                            "label": "Test",
                                            "attribute node": [
                                                {
                                                    "node type": "NATIVE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "EXTENDS",
                                                    "children": [
                                                        {
                                                            "node type": "LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "Object"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "Math"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "IMPLEMENTS",
                                                    "children": [
                                                        {
                                                            "node type": "LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "A"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "B"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "FUNCTION",
                                                            "label": "add",
                                                            "children": [
                                                                {
                                                                    "node type": "PARAMETERS",
                                                                    "children": [
                                                                        {
                                                                            "node type": "PARAM",
                                                                            "label": "rhs",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "TYPE",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "Integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "DIRECTIVE_LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "RETURN",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "ADD",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "MULTIPLY",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "MEMBER",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "node type": "THIS"
                                                                                                        },
                                                                                                        {
                                                                                                            "node type": "IDENTIFIER",
                                                                                                            "label": "data"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "node type": "CALL",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "node type": "MEMBER",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "node type": "IDENTIFIER",
                                                                                                                    "label": "A"
                                                                                                                },
                                                                                                                {
                                                                                                                    "node type": "IDENTIFIER",
                                                                                                                    "label": "getA"
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "node type": "LIST"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "node type": "MULTIPLY",
                                                                                            "children": [
                                                                                                {
                                                                                                    "node type": "IDENTIFIER",
                                                                                                    "label": "rhs"
                                                                                                },
                                                                                                {
                                                                                                    "node type": "CALL",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "node type": "MEMBER",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "node type": "IDENTIFIER",
                                                                                                                    "label": "Math"
                                                                                                                },
                                                                                                                {
                                                                                                                    "node type": "IDENTIFIER",
                                                                                                                    "label": "sqrt"
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "node type": "LIST",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "node type": "CALL",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "node type": "MEMBER",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "node type": "IDENTIFIER",
                                                                                                                                    "label": "B"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "node type": "IDENTIFIER",
                                                                                                                                    "label": "getB"
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "node type": "LIST"
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "VAR",
                                                            "attribute node": [
                                                                {
                                                                    "node type": "PRIVATE"
                                                                }
                                                            ],
                                                            "children": [
                                                                {
                                                                    "node type": "VARIABLE",
                                                                    "label": "data"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using extends after implements
    {
        //"verbose": true,
        "name": "class using extends after implements",
        "program": "private class DoubleExtend extends Object, Math implements A, B extends More {};",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "a class definition expects 'extends' first and then 'implements'."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "DoubleExtend",
                            "attribute node": [
                                {
                                    "node type": "PRIVATE"
                                }
                            ],
                            "children": [
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "LIST",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "Object"
                                                },
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "Math"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "IMPLEMENTS",
                                    "children": [
                                        {
                                            "node type": "LIST",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "A"
                                                },
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "B"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "More"
                                        }
                                    ]
                                },
                                {
                                    "node type": "EMPTY"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using "public" instead of "extends"
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using public instead of extends",
        "program": "class unexpected_extension public Object { function add (rhs: Integer) { return this.data + rhs; } private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "please use 'extends' or 'implements' to define a list of base classes. 'public', 'private', and 'protected' are used in C++ only."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "Object"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                                    "label": "add",
                                            "children": [
                                                {
                                                    "node type": "PARAMETERS",
                                                    "children": [
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "rhs",
                                                            "children": [
                                                                {
                                                                    "node type": "TYPE",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "Integer"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "ADD",
                                                                    "children": [
                                                                        {
                                                                            "node type": "MEMBER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "THIS"
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "data"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "rhs"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using a colon and "public" instead of "extends"
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using ':' and public instead of extends",
        "program": "class unexpected_extension : public Object { function add (rhs: Integer) { return this.data + rhs; } private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "please use 'extends' or 'implements' to define a list of base classes. 'public', 'private', and 'protected' are used in C++ only."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "Object"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                                    "label": "add",
                                            "children": [
                                                {
                                                    "node type": "PARAMETERS",
                                                    "children": [
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "rhs",
                                                            "children": [
                                                                {
                                                                    "node type": "TYPE",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "Integer"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "ADD",
                                                                    "children": [
                                                                        {
                                                                            "node type": "MEMBER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "THIS"
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "data"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "rhs"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using "private" instead of "extends"
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using private instead of extends",
        "program": "class unexpected_extension private Object { function add (rhs: Integer) { return this.data + rhs; } private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "please use 'extends' or 'implements' to define a list of base classes. 'public', 'private', and 'protected' are used in C++ only."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "Object"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                                    "label": "add",
                                            "children": [
                                                {
                                                    "node type": "PARAMETERS",
                                                    "children": [
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "rhs",
                                                            "children": [
                                                                {
                                                                    "node type": "TYPE",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "Integer"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "ADD",
                                                                    "children": [
                                                                        {
                                                                            "node type": "MEMBER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "THIS"
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "data"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "rhs"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using a colon and "private" instead of "extends"
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using ':' and private instead of extends",
        "program": "class unexpected_extension : private Object { function add (rhs: Integer) { return this.data + rhs; } private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "please use 'extends' or 'implements' to define a list of base classes. 'public', 'private', and 'protected' are used in C++ only."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "Object"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                                    "label": "add",
                                            "children": [
                                                {
                                                    "node type": "PARAMETERS",
                                                    "children": [
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "rhs",
                                                            "children": [
                                                                {
                                                                    "node type": "TYPE",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "Integer"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "ADD",
                                                                    "children": [
                                                                        {
                                                                            "node type": "MEMBER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "THIS"
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "data"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "rhs"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using "protected" instead of "extends"
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using protected instead of extends",
        "program": "class unexpected_extension protected Object { function add (rhs: Integer) { return this.data + rhs; } private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "please use 'extends' or 'implements' to define a list of base classes. 'public', 'private', and 'protected' are used in C++ only."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "Object"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                                    "label": "add",
                                            "children": [
                                                {
                                                    "node type": "PARAMETERS",
                                                    "children": [
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "rhs",
                                                            "children": [
                                                                {
                                                                    "node type": "TYPE",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "Integer"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "ADD",
                                                                    "children": [
                                                                        {
                                                                            "node type": "MEMBER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "THIS"
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "data"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "rhs"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using a colon and "protected" instead of "extends"
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using ':' and protected instead of extends",
        "program": "class unexpected_extension : protected Object { function add (rhs: Integer) { return this.data + rhs; } private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "please use 'extends' or 'implements' to define a list of base classes. 'public', 'private', and 'protected' are used in C++ only."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "Object"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                                    "label": "add",
                                            "children": [
                                                {
                                                    "node type": "PARAMETERS",
                                                    "children": [
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "rhs",
                                                            "children": [
                                                                {
                                                                    "node type": "TYPE",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "Integer"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "ADD",
                                                                    "children": [
                                                                        {
                                                                            "node type": "MEMBER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "THIS"
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "data"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "rhs"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using a colon (:) with extends
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using a colon (:) and extends",
        "program": "class unexpected_extension : extends Object { function add (rhs: Integer) { return this.data + rhs; } private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "the 'extends' and 'implements' instructions cannot be preceeded by a colon."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "EXTENDS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "Object"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                                    "label": "add",
                                            "children": [
                                                {
                                                    "node type": "PARAMETERS",
                                                    "children": [
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "rhs",
                                                            "children": [
                                                                {
                                                                    "node type": "TYPE",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "Integer"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "ADD",
                                                                    "children": [
                                                                        {
                                                                            "node type": "MEMBER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "THIS"
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "data"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "rhs"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using a colon (:) with implements
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using a colon (:) and implements",
        "program": "class unexpected_extension : implements Object { function add (rhs: Integer) { return this.data + rhs; } private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "the 'extends' and 'implements' instructions cannot be preceeded by a colon."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "IMPLEMENTS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "Object"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FUNCTION",
                                                    "label": "add",
                                            "children": [
                                                {
                                                    "node type": "PARAMETERS",
                                                    "children": [
                                                        {
                                                            "node type": "PARAM",
                                                            "label": "rhs",
                                                            "children": [
                                                                {
                                                                    "node type": "TYPE",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "Integer"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "RETURN",
                                                            "children": [
                                                                {
                                                                    "node type": "ADD",
                                                                    "children": [
                                                                        {
                                                                            "node type": "MEMBER",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "THIS"
                                                                                },
                                                                                {
                                                                                    "node type": "IDENTIFIER",
                                                                                    "label": "data"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "rhs"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using a colon (:) an unknown keyword
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using a colon (:) and an unknown keyword",
        "program": "class unexpected_extension : Object { private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 1,
                "message": "'{' expected to start the 'class' definition."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension"
                        },
                        {
                            "node type": "DIRECTIVE_LIST",
                            "attribute node": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "Object"
                                }
                            ],
                            "children": [
                                {
                                    "node type": "VAR",
                                    "attribute node": [
                                        {
                                            "node type": "PRIVATE"
                                        }
                                    ],
                                    "children": [
                                        {
                                            "node type": "VARIABLE",
                                            "label": "data"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using a spurious colon (:)
    // (for silly C++ programmers)
    {
        //"verbose": true,
        "name": "class using a spurious colon (:)",
        "program": "class unexpected_extension : { private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 1,
                "message": "the 'class' keyword cannot be followed by a colon."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // A class using two implements
    {
        //"verbose": true,
        "name": "class using two implements",
        "program": "class unexpected_extension implements A implements B { private var data; };",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INCOMPATIBLE",
                "line #": 1,
                "message": "a class definition expects zero or one 'extends' and then zero or one 'implements'. Use commas to separate multiple inheritance names."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CLASS",
                            "label": "unexpected_extension",
                            "children": [
                                {
                                    "node type": "IMPLEMENTS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "A"
                                        }
                                    ]
                                },
                                {
                                    "node type": "IMPLEMENTS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "B"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "VAR",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "VARIABLE",
                                                    "label": "data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }

]
// end
// vim: ts=4 sw=4 et
