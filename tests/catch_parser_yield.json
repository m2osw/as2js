// start
[
 
    // Yield expression
    {
        //"verbose": true,
        "name": "Yield an expression",
        "program": "yield 23 ** 2;",
        "expected messages": [
            {
                "options": "extended_operators|extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 1,
                "message": "the '**' operator is only available when extended operators are authorized (use extended_operators;)."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "YIELD",
                            "children": [
                                {
                                    "node type": "POWER",
                                    "children": [
                                        {
                                            "node type": "INT64",
                                            "integer": 23
                                        },
                                        {
                                            "node type": "INT64",
                                            "integer": 2
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // Yield missing expression
    {
        //"verbose": true,
        "name": "Yield without the mandatory expression",
        "program": "yield;",
        "expected messages": [
            {
                "message level": 2,
                "error code": "EXPRESSION_EXPECTED",
                "line #": 1,
                "message": "yield is expected to be followed by an expression."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST"
                }
            ]
        }
    }

]
// end
// vim: ts=4 sw=4 et
