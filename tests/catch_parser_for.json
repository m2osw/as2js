// start
[
 
    // forever()
    {
        //"verbose": true,
        "slow": true,
        "name": "forever loop",
        "program": "for(;;)\n\
{\n\
a = [123, 33.21, 'item', , {empty: \"object\"}];\n\
b = a[idx];\n\
}\n",
        "expected messages": [
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 3,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 4,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FOR",
                            "children": [
                                {
                                    "node type": "EMPTY"
                                },
                                {
                                    "node type": "EMPTY"
                                },
                                {
                                    "node type": "EMPTY"
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "DIRECTIVE_LIST",
                                            "children": [
                                                {
                                                    "node type": "ASSIGNMENT",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "a"
                                                        },
                                                        {
                                                            "node type": "ARRAY_LITERAL",
                                                            "children": [
                                                                {
                                                                    "node type": "LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "INT64",
                                                                            "integer": 123
                                                                        },
                                                                        {
                                                                            "node type": "FLOAT64",
                                                                            "float": 33.21
                                                                        },
                                                                        {
                                                                            "node type": "STRING",
                                                                            "label": "item"
                                                                        },
                                                                        {
                                                                            "node type": "EMPTY"
                                                                        },
                                                                        {
                                                                            "node type": "OBJECT_LITERAL",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "NAME",
                                                                                    "label": "empty"
                                                                                },
                                                                                {
                                                                                    "node type": "SET",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "STRING",
                                                                                            "label": "object"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "ASSIGNMENT",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "b"
                                                        },
                                                        {
                                                            "node type": "ARRAY",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "a"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "idx"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // for larger to smaller
    {
        //"verbose": true,
        "name": "standard for loop and broken switch statements",
        "program": "for(const var j: integer = 10; j >= 0; j--)\n\
{\n\
switch oops;\n\
a = [123, 33.21, 'item', , {empty: \"object\"}];\n\
switch(hole { --idx; }\n\
b = a[idx];\n\
switch(color) with(*=) { idx--; }\n\
switch(color) with( { idx++; }\n\
switch(color) with !==) { ++idx; }\n\
switch(color) with(!=  { idx %= 5; }\n\
switch(color) with <= { idx := 5; }\n\
switch(color) case 3: idx |= 5;\n\
}\n",
        "expected messages": [
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 1,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 3,
                "message": "'(' expected after the 'switch' keyword."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 4,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 5,
                "message": "')' expected to end the 'switch' expression."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 6,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "options": "extended_statements|extended_statements_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 7,
                "message": "a switch() statement can be followed by a 'with' only if extended statements were turned on (use extended_statements;)."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 7,
                "message": "'ASSIGNMENT_MULTIPLY' is not a supported operator for a 'switch() with()' expression."
            },
            {
                "options": "extended_statements|extended_statements_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 8,
                "message": "a switch() statement can be followed by a 'with' only if extended statements were turned on (use extended_statements;)."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 8,
                "message": "'OPEN_CURVLY_BRACKET' is not a supported operator for a 'switch() with()' expression."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 8,
                "message": "')' expected to end the 'switch() with()' expression."
            },
            {
                "options": "extended_statements|extended_statements_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 9,
                "message": "a switch() statement can be followed by a 'with' only if extended statements were turned on (use extended_statements;)."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 9,
                "message": "'(' was expected to start the 'switch() with()' expression."
            },
            {
                "options": "extended_statements|extended_statements_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 10,
                "message": "a switch() statement can be followed by a 'with' only if extended statements were turned on (use extended_statements;)."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 10,
                "message": "')' expected to end the 'switch() with()' expression."
            },
            {
                "options": "extended_statements|extended_statements_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 11,
                "message": "a switch() statement can be followed by a 'with' only if extended statements were turned on (use extended_statements;)."
            },
            {
                "options": "extended_operators|extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 11,
                "message": "the ':=' operator is only available when extended operators are authorized (use extended_operators;)."
            },
            {
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 12,
                "message": "'{' expected after the 'switch' expression."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FOR",
                            "flags": "FOR_FLAG_CONST",
                            "children": [
                                {
                                    "node type": "VAR",
                                    "children": [
                                        {
                                            "node type": "VARIABLE",
                                            "label": "j",
                                            "flags": "VARIABLE_FLAG_CONST",
                                            "children": [
                                                {
                                                    "node type": "TYPE",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "integer"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "SET",
                                                    "children": [
                                                        {
                                                            "node type": "INT64",
                                                            "integer": 10
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "GREATER_EQUAL",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "j"
                                        },
                                        {
                                            "node type": "INT64",
                                            "integer": 0
                                        }
                                    ]
                                },
                                {
                                    "node type": "POST_DECREMENT",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "j"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "DIRECTIVE_LIST",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "oops"
                                                },
                                                {
                                                    "node type": "ASSIGNMENT",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "a"
                                                        },
                                                        {
                                                            "node type": "ARRAY_LITERAL",
                                                            "children": [
                                                                {
                                                                    "node type": "LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "INT64",
                                                                            "integer": 123
                                                                        },
                                                                        {
                                                                            "node type": "FLOAT64",
                                                                            "float": 33.21
                                                                        },
                                                                        {
                                                                            "node type": "STRING",
                                                                            "label": "item"
                                                                        },
                                                                        {
                                                                            "node type": "EMPTY"
                                                                        },
                                                                        {
                                                                            "node type": "OBJECT_LITERAL",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "NAME",
                                                                                    "label": "empty"
                                                                                },
                                                                                {
                                                                                    "node type": "SET",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "STRING",
                                                                                            "label": "object"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "SWITCH",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "hole"
                                                        },
                                                        {
                                                            "node type": "DIRECTIVE_LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "DECREMENT",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "idx"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "ASSIGNMENT",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "b"
                                                        },
                                                        {
                                                            "node type": "ARRAY",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "a"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "idx"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "SWITCH",
                                                    "switch operator": "UNKNOWN",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "color"
                                                        },
                                                        {
                                                            "node type": "DIRECTIVE_LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "POST_DECREMENT",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "idx"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "SWITCH",
                                                    "switch operator": "UNKNOWN",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "color"
                                                        },
                                                        {
                                                            "node type": "DIRECTIVE_LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "POST_INCREMENT",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "idx"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "SWITCH",
                                                    "switch operator": "STRICTLY_NOT_EQUAL",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "color"
                                                        },
                                                        {
                                                            "node type": "DIRECTIVE_LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "INCREMENT",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "idx"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "SWITCH",
                                                    "switch operator": "NOT_EQUAL",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "color"
                                                        },
                                                        {
                                                            "node type": "DIRECTIVE_LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "ASSIGNMENT_MODULO",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "idx"
                                                                        },
                                                                        {
                                                                            "node type": "INT64",
                                                                            "integer": 5
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "SWITCH",
                                                    "switch operator": "LESS_EQUAL",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "color"
                                                        },
                                                        {
                                                            "node type": "DIRECTIVE_LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "ASSIGNMENT",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "idx"
                                                                        },
                                                                        {
                                                                            "node type": "INT64",
                                                                            "integer": 5
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "SWITCH",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "color"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "CASE",
                                                    "children": [
                                                        {
                                                            "node type": "INT64",
                                                            "integer": 3
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "ASSIGNMENT_BITWISE_OR",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "idx"
                                                        },
                                                        {
                                                            "node type": "INT64",
                                                            "integer": 5
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // more invalid for() loops
    {
        //"verbose": true,
        "slow": true,
        "name": "a few extra valid and invalid for loops",
        "program": "for(a = 3; a <= j + 5; a *= 1.31)\n\
for(a in o)\n\
console.log(a);\n\
for a = 11;\n\
for(a = obj.start; a < obj.end; a += obj.next { missing += close in -3 .. +3; }\n\
for(j = 33) { oops += j; }\n\
for each (q = -5; q <= +5; q += 0.1) { forever[q] &= q; }\n\
for(z = 33; z < !33) { last >>= one; }\n\
",
        "expected messages": [
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 1,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "options": "no_extended_statements_safe",
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 2,
                "message": "'{' expected to open the 'FOR' block."
            },
            {
                "options": "no_extended_statements_safe",
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 3,
                "message": "'{' expected to open the 'FOR' block."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 4,
                "message": "'(' expected following the 'for' keyword."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 4,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 5,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 5,
                "message": "')' expected to close the 'for' expressions."
            },
            {
                "options": "extended_operators|extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 5,
                "message": "the 'x in min .. max' operator is only available when extended operators are authorized (use extended_operators;)."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 6,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "message level": 2,
                "error code": "SEMICOLON_EXPECTED",
                "line #": 6,
                "message": "';' or 'in' expected between the 'for' expressions."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 7,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 7,
                "message": "'for each()' only available with an enumeration for."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 8,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "message level": 2,
                "error code": "SEMICOLON_EXPECTED",
                "line #": 8,
                "message": "';' expected between the last two 'for' expressions."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FOR",
                            "children": [
                                {
                                    "node type": "ASSIGNMENT",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "a"
                                        },
                                        {
                                            "node type": "INT64",
                                            "integer": 3
                                        }
                                    ]
                                },
                                {
                                    "node type": "LESS_EQUAL",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "a"
                                        },
                                        {
                                            "node type": "ADD",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "j"
                                                },
                                                {
                                                    "node type": "INT64",
                                                    "integer": 5
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "ASSIGNMENT_MULTIPLY",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "a"
                                        },
                                        {
                                            "node type": "FLOAT64",
                                            "float": 1.31
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "FOR",
                                            "flags": "FOR_FLAG_IN",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "a"
                                                },
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "o"
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        {
                                                            "node type": "CALL",
                                                            "children": [
                                                                {
                                                                    "node type": "MEMBER",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "console"
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "log"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "LIST",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "a"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 11
                                }
                            ]
                        },
                        {
                            "node type": "FOR",
                            "children": [
                                {
                                    "node type": "ASSIGNMENT",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "a"
                                        },
                                        {
                                            "node type": "MEMBER",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "obj"
                                                },
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "start"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "LESS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "a"
                                        },
                                        {
                                            "node type": "MEMBER",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "obj"
                                                },
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "end"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "ASSIGNMENT_ADD",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "a"
                                        },
                                        {
                                            "node type": "MEMBER",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "obj"
                                                },
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "next"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "DIRECTIVE_LIST",
                                            "children": [
                                                {
                                                    "node type": "ASSIGNMENT_ADD",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "missing"
                                                        },
                                                        {
                                                            "node type": "IN",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "close"
                                                                },
                                                                {
                                                                    "node type": "SUBTRACT",
                                                                    "children": [
                                                                        {
                                                                            "node type": "INT64",
                                                                            "integer": 3
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "ADD",
                                                                    "children": [
                                                                        {
                                                                            "node type": "INT64",
                                                                            "integer": 3
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "FOR",
                            "children": [
                                {
                                    "node type": "ASSIGNMENT",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "j"
                                        },
                                        {
                                            "node type": "INT64",
                                            "integer": 33
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "DIRECTIVE_LIST",
                                            "children": [
                                                {
                                                    "node type": "ASSIGNMENT_ADD",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "oops"
                                                        },
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "j"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "FOR",
                            "children": [
                                {
                                    "node type": "ASSIGNMENT",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "q"
                                        },
                                        {
                                            "node type": "SUBTRACT",
                                            "children": [
                                                {
                                                    "node type": "INT64",
                                                    "integer": 5
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "LESS_EQUAL",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "q"
                                        },
                                        {
                                            "node type": "ADD",
                                            "children": [
                                                {
                                                    "node type": "INT64",
                                                    "integer": 5
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "ASSIGNMENT_ADD",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "q"
                                        },
                                        {
                                            "node type": "FLOAT64",
                                            "float": 0.1
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "DIRECTIVE_LIST",
                                            "children": [
                                                {
                                                    "node type": "ASSIGNMENT_BITWISE_AND",
                                                    "children": [
                                                        {
                                                            "node type": "ARRAY",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "forever"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "q"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "q"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "FOR",
                            "children": [
                                {
                                    "node type": "ASSIGNMENT",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "z"
                                        },
                                        {
                                            "node type": "INT64",
                                            "integer": 33
                                        }
                                    ]
                                },
                                {
                                    "node type": "LESS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "z"
                                        },
                                        {
                                            "node type": "LOGICAL_NOT",
                                            "children": [
                                                {
                                                    "node type": "INT64",
                                                    "integer": 33
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "DIRECTIVE_LIST",
                                            "children": [
                                                {
                                                    "node type": "ASSIGNMENT_SHIFT_RIGHT",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "last"
                                                        },
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "one"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // legal empty statements
    {
        //"verbose": true,
        //"slow": true,
        "name": "legal empty for() and while() statements",
        "program": "for(i = 0; i < 100; ++i);\n\
while(v)\n\
{\n\
    ;\n\
}\n",
        "expected messages": [
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 1,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "options": "no_extended_statements_safe",
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 1,
                "message": "'{' expected to open the 'FOR' block."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FOR",
                            "children": [
                                {
                                    "node type": "ASSIGNMENT",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "i"
                                        },
                                        {
                                            "node type": "INT64",
                                            "integer": 0
                                        }
                                    ]
                                },
                                {
                                    "node type": "LESS",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "i"
                                        },
                                        {
                                            "node type": "INT64",
                                            "integer": 100
                                        }
                                    ]
                                },
                                {
                                    "node type": "INCREMENT",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "i"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST"
                                }
                            ]
                        },
                        {
                            "node type": "WHILE",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "v"
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "DIRECTIVE_LIST"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }

]
// end
// vim: ts=4 sw=4 et
