// relational
[

    // a <=> b
    {
        //"verbose": true,
        "name": "\"ABC\" <=> \"XYZ\" -> -1",
        "program": "use extended_operators; \"ABC\" <=> \"XYZ\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "ABC"
                                },
                                {
                                    "node type": "STRING",
                                    "label": "XYZ"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": -1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "\"XYZ\" <=> \"ABC\" -> 1",
        "program": "use extended_operators; \"XYZ\" <=> \"ABC\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "XYZ"
                                },
                                {
                                    "node type": "STRING",
                                    "label": "ABC"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "\"ABC\" <=> \"ABC\" -> 0",
        "program": "use extended_operators; \"ABC\" <=> \"ABC\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "ABC"
                                },
                                {
                                    "node type": "STRING",
                                    "label": "ABC"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "33 <=> 44 -> -1",
        "program": "use extended_operators; 33 <=> 44;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 33
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 44
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": -1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "44 <=> 33 -> 1",
        "program": "use extended_operators; 44 <=> 33;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 44
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 33
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "33 <=> 33 -> 0",
        "program": "use extended_operators; 33 <=> 33;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 33
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 33
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "3.3 <=> 4.4 -> -1",
        "program": "use extended_operators; 3.3 <=> 4.4;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 3.3
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": 4.4
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": -1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "4.4 <=> 3.3 -> 1",
        "program": "use extended_operators; 4.4 <=> 3.3;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 4.4
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": 3.3
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "3.3 <=> 3.3 -> 0",
        "program": "use extended_operators; 3.3 <=> 3.3;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 3.3
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": 3.3
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "\"3.3\" <=> 4.4 -> -1",
        "program": "use extended_operators; \"3.3\" <=> 4.4;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "3.3"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": 4.4
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": -1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "\"4.4\" <=> 3.3 -> 1",
        "program": "use extended_operators; \"4.4\" <=> 3.3;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "4.4"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": 3.3
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "\"3.3\" <=> 3.3 -> 0",
        "program": "use extended_operators; \"3.3\" <=> 3.3;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "3.3"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": 3.3
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "3.3 <=> \"4.4\" -> -1",
        "program": "use extended_operators; 3.3 <=> \"4.4\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 3.3
                                },
                                {
                                    "node type": "STRING",
                                    "label": "4.4"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": -1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "4.4 <=> \"3.3\" -> 1",
        "program": "use extended_operators; 4.4 <=> \"3.3\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 4.4
                                },
                                {
                                    "node type": "STRING",
                                    "label": "3.3"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "3.3 <=> \"3.3\" -> 0",
        "program": "use extended_operators; 3.3 <=> \"3.3\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 3.3
                                },
                                {
                                    "node type": "STRING",
                                    "label": "3.3"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "-Infinity <=> +Infinity -> -1",
        "program": "use extended_operators; -Infinity <=> +Infinity;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "SUBTRACT",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                },
                                {
                                    "node type": "ADD",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": -1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "+Infinity <=> -Infinity -> 1",
        "program": "use extended_operators; +Infinity <=> -Infinity;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "ADD",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                },
                                {
                                    "node type": "SUBTRACT",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 1
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "+Infinity <=> +Infinity -> 0",
        "program": "use extended_operators; +Infinity <=> +Infinity;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "ADD",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                },
                                {
                                    "node type": "ADD",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "-Infinity <=> -Infinity -> 0",
        "program": "use extended_operators; -Infinity <=> -Infinity;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "SUBTRACT",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                },
                                {
                                    "node type": "SUBTRACT",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "33 <=> \"XYZ\" -> undefined",
        "program": "use extended_operators; 33 <=> \"XYZ\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 33
                                },
                                {
                                    "node type": "STRING",
                                    "label": "XYZ"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "UNDEFINED"
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "\"ABC\" <=> 4.4 -> undefined",
        "program": "use extended_operators; \"ABC\" <=> 4.4;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "ABC"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": 4.4
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "UNDEFINED"
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "+Infinity <=> 'not a number' -> undefined",
        "program": "use extended_operators; +Infinity <=> 'not a number';",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "ADD",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                },
                                {
                                    "node type": "STRING",
                                    "label": "not a number"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "UNDEFINED"
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "'not a number' <=> -Infinity -> undefined",
        "program": "use extended_operators; 'not a number' <=> -Infinity;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "not a number"
                                },
                                {
                                    "node type": "SUBTRACT",
                                    "children": [
                                        {
                                            "node type": "FLOAT64",
                                            "float": Infinity
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "UNDEFINED"
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b
    {
        //"verbose": true,
        "name": "null <=> undefined -> 0",
        "program": "use extended_operators; null <=> undefined;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "NULL"
                                },
                                {
                                    "node type": "UNDEFINED"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b -- null becomes 0.0
    {
        //"verbose": true,
        "name": "null <=> 0 -> 0",
        "program": "use extended_operators; null <=> 0;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "NULL"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // a <=> b -- undefined becomes NaN
    {
        //"verbose": true,
        "name": "0.0 <=> undefined -> undefined",
        "program": "use extended_operators; 0 <=> undefined;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "COMPARE",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                },
                                {
                                    "node type": "UNDEFINED"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "UNDEFINED"
                        }
                    ]
                }
            ]
        }
    }

]
// vim: ts=4 sw=4 et
