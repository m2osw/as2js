// assignments
[

    // a = a; -> a
    {
        //"verbose": true,
        "name": "a = a; -> a",
        "program": "a = a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // to make sure that we properly compare identifiers
    // (i.e. that we do not optimize the follow!)
    // a = b; -> a = b;
    {
        //"verbose": true,
        "name": "a = b; -> a = b;",
        "program": "a = b;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "b"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "b"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a -= NaN; -> a = NaN;
    {
        //"verbose": true,
        "name": "a -= NaN; -> a = NaN;",
        "program": "a -= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_SUBTRACT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a *= NaN; -> a = NaN;
    {
        //"verbose": true,
        "name": "a *= NaN; -> a = NaN;",
        "program": "a *= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_MULTIPLY",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a /= NaN; -> a = NaN;
    {
        //"verbose": true,
        "name": "a /= NaN; -> a = NaN;",
        "program": "a /= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_DIVIDE",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a %= NaN; -> a = NaN;
    {
        //"verbose": true,
        "name": "a %= NaN; -> a = NaN;",
        "program": "a %= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_MODULO",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a **= NaN; -> a = NaN;
    {
        //"verbose": true,
        "name": "a **= NaN; -> a = NaN;",
        "program": "use extended_operators; a **= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_POWER",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a <?= NaN; -> a;
    {
        //"verbose": true,
        "name": "a <?= NaN; -> a;",
        "program": "use extended_operators; a <?= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_MINIMUM",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // a >?= NaN; -> a;
    {
        //"verbose": true,
        "name": "a >?= NaN; -> a;",
        "program": "use extended_operators; a >?= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_MAXIMUM",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // a &= NaN; -> a = 0;
    {
        //"verbose": true,
        "name": "a &= NaN; -> a = 0;",
        "program": "a &= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_BITWISE_AND",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a |= NaN; -> a = 0;
    {
        //"verbose": true,
        "name": "a |= NaN; -> a = 0;",
        "program": "a |= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_BITWISE_OR",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a ^= NaN; -> a = 0;
    {
        //"verbose": true,
        "name": "a ^= NaN; -> a = 0;",
        "program": "a ^= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_BITWISE_XOR",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a <<= NaN; -> a = 0;
    {
        //"verbose": true,
        "name": "a <<= NaN; -> a = 0;",
        "program": "a <<= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_SHIFT_LEFT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a >>= NaN; -> a = 0;
    {
        //"verbose": true,
        "name": "a >>= NaN; -> a = 0;",
        "program": "a >>= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_SHIFT_RIGHT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a >>>= NaN; -> a = 0;
    {
        //"verbose": true,
        "name": "a >>>= NaN; -> a = 0;",
        "program": "a >>>= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_SHIFT_RIGHT_UNSIGNED",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a <%= NaN; -> a = 0;
    {
        //"verbose": true,
        "name": "a <%= NaN; -> a = 0;",
        "program": "use extended_operators; a <%= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_ROTATE_LEFT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a >%= NaN; -> a = 0;
    {
        //"verbose": true,
        "name": "a >%= NaN; -> a = 0;",
        "program": "use extended_operators; a >%= NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT_ROTATE_RIGHT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "ASSIGNMENT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }

]
// vim: ts=4 sw=4 et
