// start
[
 
    // Missing ':' after case expression, check try/catch
    {
        //"verbose": true,
        "name": "Missing ':' after case expression, and try/catch",
        "program": "try {\n\
    a.dog().bark().loudly();\n\
    switch(a.cat(3 <% a.bird())) with(==)\n\
    private {\n\
        case 89 b = 111; a ||= 3; break orange;\n\
        case 101: a = a >? 22; continue;\n\
    }\n\
}\n\
catch(a: Number) { console.log('number: ' + a); }\n\
catch(e if e instanceof RangeError) { alert('range problem'); }\n\
catch(e: Exception if e instanceof EvalError) { alert('eval problem'); }\n\
catch(...) { dom.setAttr('title', 'Click here'); }",
        "expected messages": [
            {
                "options": "extended_operators|extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 3,
                "message": "the 'ROTATE_LEFT' operator is only available when extended operators are authorized (use extended_operators;)."
            },
            {
                "options": "extended_statements|extended_statements_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 3,
                "message": "a switch() statement can be followed by a 'with' only if extended statements were turned on (use extended_statements;)."
            },
            {
                "message level": 2,
                "error code": "CASE_LABEL",
                "line #": 5,
                "message": "case expression expected to be followed by ':'."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 5,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "options": "extended_operators|extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 6,
                "message": "the 'MAXIMUM' operator is only available when extended operators are authorized (use extended_operators;)."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 6,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRY",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CALL",
                                            "children": [
                                                {
                                                    "node type": "MEMBER",
                                                    "children": [
                                                        {
                                                            "node type": "CALL",
                                                            "children": [
                                                                {
                                                                    "node type": "MEMBER",
                                                                    "children": [
                                                                        {
                                                                            "node type": "CALL",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "a"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "dog"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "LIST"
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "bark"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "node type": "LIST"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "loudly"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "LIST"
                                                }
                                            ]
                                        },
                                        {
                                            "node type": "SWITCH",
                                            "switch operator": "EQUAL",
                                            "attribute node": [
                                                {
                                                    "node type": "PRIVATE"
                                                }
                                            ],
                                            "children": [
                                                {
                                                    "node type": "CALL",
                                                    "children": [
                                                        {
                                                            "node type": "MEMBER",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "a"
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "cat"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "ROTATE_LEFT",
                                                                    "children": [
                                                                        {
                                                                            "node type": "INT64",
                                                                            "integer": 3
                                                                        },
                                                                        {
                                                                            "node type": "CALL",
                                                                            "children": [
                                                                                {
                                                                                    "node type": "MEMBER",
                                                                                    "children": [
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "a"
                                                                                        },
                                                                                        {
                                                                                            "node type": "IDENTIFIER",
                                                                                            "label": "bird"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "node type": "LIST"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "DIRECTIVE_LIST",
                                                    "children": [
                                                        // case 89
                                                        {
                                                            "node type": "CASE",
                                                            "children": [
                                                                {
                                                                    "node type": "INT64",
                                                                    "integer": 89
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "ASSIGNMENT",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "b"
                                                                },
                                                                {
                                                                    "node type": "INT64",
                                                                    "integer": 111
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "ASSIGNMENT_LOGICAL_OR",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "a"
                                                                },
                                                                {
                                                                    "node type": "INT64",
                                                                    "integer": 3
                                                                }
                                                            ]
                                                        },
                                                        {
                                                           "node type": "BREAK",
                                                            "label": "orange"
                                                        },
                                                        // case 101
                                                        {
                                                            "node type": "CASE",
                                                            "children": [
                                                                {
                                                                    "node type": "INT64",
                                                                    "integer": 101
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "ASSIGNMENT",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "a"
                                                                },
                                                                {
                                                                    "node type": "MAXIMUM",
                                                                    "children": [
                                                                        {
                                                                            "node type": "IDENTIFIER",
                                                                            "label": "a"
                                                                        },
                                                                        {
                                                                            "node type": "INT64",
                                                                            "integer": 22
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "CONTINUE",
                                                            "label": ""
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "CATCH",
                            "flags": "CATCH_FLAG_TYPED",
                            "children": [
                                {
                                    "node type": "PARAMETERS",
                                    "children": [
                                        {
                                            "node type": "PARAM",
                                            "label": "a",
                                            "children": [
                                                {
                                                    "node type": "TYPE",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "Number"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CALL",
                                            "children": [
                                                {
                                                    "node type": "MEMBER",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "console"
                                                        },
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "log"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "LIST",
                                                    "children": [
                                                        {
                                                            "node type": "ADD",
                                                            "children": [
                                                                {
                                                                    "node type": "STRING",
                                                                    "label": "number: "
                                                                },
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "a"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "CATCH",
                            "children": [
                                {
                                    "node type": "PARAMETERS",
                                    "children": [
                                        {
                                            "node type": "PARAM",
                                            "label": "e"
                                        }
                                    ]
                                },
                                {
                                    "node type": "IF",
                                    "children": [
                                        {
                                            "node type": "INSTANCEOF",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "e"
                                                },
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "RangeError"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CALL",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "alert"
                                                },
                                                {
                                                    "node type": "LIST",
                                                    "children": [
                                                        {
                                                            "node type": "STRING",
                                                            "label": "range problem"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "CATCH",
                            "flags": "CATCH_FLAG_TYPED",
                            "children": [
                                {
                                    "node type": "PARAMETERS",
                                    "children": [
                                        {
                                            "node type": "PARAM",
                                            "label": "e",
                                            "children": [
                                                {
                                                    "node type": "TYPE",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "Exception"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "IF",
                                    "children": [
                                        {
                                            "node type": "INSTANCEOF",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "e"
                                                },
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "EvalError"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CALL",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "alert"
                                                },
                                                {
                                                    "node type": "LIST",
                                                    "children": [
                                                        {
                                                            "node type": "STRING",
                                                            "label": "eval problem"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "CATCH",
                            "children": [
                                {
                                    "node type": "PARAMETERS",
                                    "children": [
                                        {
                                            "node type": "PARAM",
                                            "label": "",
                                            "flags": "PARAM_FLAG_REST"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "CALL",
                                            "children": [
                                                {
                                                    "node type": "MEMBER",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "dom"
                                                        },
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "setAttr"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "node type": "LIST",
                                                    "children": [
                                                        {
                                                            "node type": "STRING",
                                                            "label": "title"
                                                        },
                                                        {
                                                            "node type": "STRING",
                                                            "label": "Click here"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // Catch doesn't like void
    {
        //"verbose": true,
        "name": "catch(void) is not valid",
        "program": "catch(void) { throw; }\n\
catch(a, b, c) { throw b; }\n\
catch(a = 5) { return a >>>= 3, a ** 2; }\n\
catch(bad) return bad^1;\n\
catch(oops { return oops & 7; }\n\
catch argh) { throw new RangeError(\"really bad\"); }\n",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INVALID_CATCH",
                "line #": 1,
                "message": "the 'catch' statement cannot be used with void as its list of parameters."
            },
            {
                "message level": 2,
                "error code": "INVALID_CATCH",
                "line #": 2,
                "message": "the 'catch' keyword expects exactly one parameter."
            },
            {
                "options": "no_extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 3,
                "message": "the '=' operator is not available when extended operators value bit 1 is set (use extended_operators(2);)."
            },
            {
                "message level": 2,
                "error code": "INVALID_CATCH",
                "line #": 3,
                "message": "'catch' parameters do not support initializers."
            },
            {
                "options": "extended_operators|extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 3,
                "message": "the '**' operator is only available when extended operators are authorized (use extended_operators;)."
            },
            {
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 4,
                "message": "'{' expected after the 'catch' parameter list."
            },
            {
                "message level": 2,
                "error code": "INVALID_PARAMETERS",
                "line #": 5,
                "message": "expected ')' or ',' after a parameter declaration (not token OPEN_CURVLY_BRACKET)."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 5,
                "message": "')' expected to end the 'catch' parameter list."
            },
            {
                "message level": 2,
                "error code": "PARENTHESIS_EXPECTED",
                "line #": 6,
                "message": "'(' expected after the 'catch' keyword."
            },
            {
                "message level": 2,
                "error code": "INVALID_OPERATOR",
                "line #": 6,
                "message": "unexpected operator 'CLOSE_PARENTHESIS'."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CATCH"
                        },
                        // because of the (void) the directive list ends up
                        // "outside" of the catch
                        {
                            "node type": "DIRECTIVE_LIST",
                            "children": [
                                {
                                    "node type": "THROW"
                                }
                            ]
                        },
                        {
                            "node type": "CATCH",
                            "children": [
                                {
                                    "node type": "PARAMETERS",
                                    "children": [
                                        {
                                            "node type": "PARAM",
                                            "label": "a"
                                        },
                                        {
                                            "node type": "PARAM",
                                            "label": "b"
                                        },
                                        {
                                            "node type": "PARAM",
                                            "label": "c"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "THROW",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "b"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "CATCH",
                            "children": [
                                {
                                    "node type": "PARAMETERS",
                                    "children": [
                                        {
                                            "node type": "PARAM",
                                            "label": "a",
                                            "children": [
                                                {
                                                    "node type": "SET",
                                                    "children": [
                                                        {
                                                            "node type": "INT64",
                                                            "integer": 5
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "RETURN",
                                            "children": [
                                                {
                                                    "node type": "LIST",
                                                    "children": [
                                                        {
                                                            "node type": "ASSIGNMENT_SHIFT_RIGHT_UNSIGNED",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "a"
                                                                },
                                                                {
                                                                    "node type": "INT64",
                                                                    "integer": 3
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "node type": "POWER",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "a"
                                                                },
                                                                {
                                                                    "node type": "INT64",
                                                                    "integer": 2
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "CATCH",
                            "children": [
                                {
                                    "node type": "PARAMETERS",
                                    "children": [
                                        {
                                            "node type": "PARAM",
                                            "label": "bad"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "RETURN",
                            "children": [
                                {
                                    "node type": "BITWISE_XOR",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "bad"
                                        },
                                        {
                                            "node type": "INT64",
                                            "integer": 1
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "CATCH",
                            "children": [
                                {
                                    "node type": "PARAMETERS",
                                    "children": [
                                        {
                                            "node type": "PARAM",
                                            "label": "oops"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "DIRECTIVE_LIST",
                            "children": [
                                {
                                    "node type": "RETURN",
                                    "children": [
                                        {
                                            "node type": "BITWISE_AND",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "oops"
                                                },
                                                {
                                                    "node type": "INT64",
                                                    "integer": 7
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "DIRECTIVE_LIST",
                            "children": [
                                {
                                    "node type": "THROW",
                                    "children": [
                                        {
                                            "node type": "NEW",
                                            "children": [
                                                {
                                                    "node type": "CALL",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "RangeError"
                                                        },
                                                        {
                                                            "node type": "LIST",
                                                            "children": [
                                                                {
                                                                    "node type": "STRING",
                                                                    "label": "really bad"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // try/finally without the '{'
    {
        //"verbose": true,
        "name": "try/finally require a block",
        "program": "try g.start(); r -= p ^^ q;\n\
finally g.clear();\n",
        "expected messages": [
            {
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 1,
                "message": "'{' expected after the 'try' keyword."
            },
            {
                "options": "extended_operators|extended_operators_safe",
                "message level": 2,
                "error code": "NOT_ALLOWED",
                "line #": 1,
                "message": "the '^^' operator is only available when extended operators are authorized (use extended_operators;)."
            },
            {
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 2,
                "message": "'{' expected after the 'finally' keyword."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CALL",
                            "children": [
                                {
                                    "node type": "MEMBER",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "g"
                                        },
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "start"
                                        }
                                    ]
                                },
                                {
                                    "node type": "LIST"
                                }
                            ]
                        },
                        {
                            "node type": "ASSIGNMENT_SUBTRACT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "r"
                                },
                                {
                                    "node type": "LOGICAL_XOR",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "p"
                                        },
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "q"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "node type": "CALL",
                            "children": [
                                {
                                    "node type": "MEMBER",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "g"
                                        },
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "clear"
                                        }
                                    ]
                                },
                                {
                                    "node type": "LIST"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }

]
// end
// vim: ts=4 sw=4 et
