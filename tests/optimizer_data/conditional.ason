// conditional
[

    // true ? a : b => a
    {
        //"verbose": true,
        "name": "true ? a : b -> a",
        "program": "true ? a : b;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CONDITIONAL",
                            "children": [
                                {
                                    "node type": "TRUE"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "b"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // false ? a : b => b
    {
        //"verbose": true,
        "name": "false ? a : b -> b",
        "program": "false ? a : b;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CONDITIONAL",
                            "children": [
                                {
                                    "node type": "FALSE"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "b"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "b"
                        }
                    ]
                }
            ]
        }
    },

    // a <? b => a
    {
        //"verbose": true,
        "name": "3 <? 10 -> 3",
        "program": "use extended_operators; 3 <? 10;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "MINIMUM",
                            "children": [
                                {
                                    "node type": "INTEGER",
                                    "integer": 3
                                },
                                {
                                    "node type": "INTEGER",
                                    "integer": 10
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INTEGER",
                            "integer": 3
                        }
                    ]
                }
            ]
        }
    },

    // NaN <? a => a
    {
        //"verbose": true,
        "name": "NaN <? 10.3 -> 10.3",
        "program": "use extended_operators; NaN <? 10.3;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "MINIMUM",
                            "children": [
                                {
                                    "node type": "FLOATING_POINT",
                                    "float": NaN
                                },
                                {
                                    "node type": "FLOATING_POINT",
                                    "float": 10.3
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FLOATING_POINT",
                            "float": 10.3
                        }
                    ]
                }
            ]
        }
    },

    // a <? NaN => a
    {
        //"verbose": true,
        "name": "10.3 <? NaN -> 10.3",
        "program": "use extended_operators; 10.3 <? NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "MINIMUM",
                            "children": [
                                {
                                    "node type": "FLOATING_POINT",
                                    "float": 10.3
                                },
                                {
                                    "node type": "FLOATING_POINT",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FLOATING_POINT",
                            "float": 10.3
                        }
                    ]
                }
            ]
        }
    },

    // a >? b => a
    {
        //"verbose": true,
        "name": "3 >? 10 -> 10",
        "program": "use extended_operators; 3 >? 10;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "MAXIMUM",
                            "children": [
                                {
                                    "node type": "INTEGER",
                                    "integer": 3
                                },
                                {
                                    "node type": "INTEGER",
                                    "integer": 10
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INTEGER",
                            "integer": 10
                        }
                    ]
                }
            ]
        }
    },

    // NaN >? a => a
    {
        //"verbose": true,
        "name": "NaN >? a -> a",
        "program": "use extended_operators; NaN >? 10.3;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "MAXIMUM",
                            "children": [
                                {
                                    "node type": "FLOATING_POINT",
                                    "float": NaN
                                },
                                {
                                    "node type": "FLOATING_POINT",
                                    "float": 10.3
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FLOATING_POINT",
                            "float": 10.3
                        }
                    ]
                }
            ]
        }
    },

    // a >? NaN => a
    {
        //"verbose": true,
        "name": "10.3 >? NaN -> 10.3",
        "program": "use extended_operators; 10.3 >? NaN;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "MAXIMUM",
                            "children": [
                                {
                                    "node type": "FLOATING_POINT",
                                    "float": 10.3
                                },
                                {
                                    "node type": "FLOATING_POINT",
                                    "float": NaN
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FLOATING_POINT",
                            "float": 10.3
                        }
                    ]
                }
            ]
        }
    }

]
// vim: ts=4 sw=4 et
