// start
[

    // Empty program
    {
        //"verbose": true,
        "name": "empty program",
        "program": "",
        "result": {
            "node type": "PROGRAM"
        }
    },

    // Empty program with comments
    {
        //"verbose": true,
        "name": "empty program with comments",
        "program": "// a comment is just ignored\n/* and the program is still just empty */",
        "result": {
            "node type": "PROGRAM"
        }
    },

    // Empty program with semi-colons
    {
        //"verbose": true,
        "name": "empty program with semi-colons",
        "program": ";;;;;;;;;;",
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST"
                }
            ]
        }
    },

    // Unexpected ELSE instruction
    {
        //"verbose": true,
        "name": "unexpected \"else\" instruction",
        "program": "else",
        "expected messages": [
            {
                "message level": 2,
                "error code": "INVALID_KEYWORD",
                "line #": 1,
                "message": "'else' not expected without an 'if' keyword."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST"
                }
            ]
        }
    },

    // Unexpected }
    {
        //"verbose": true,
        "name": "unexpected \"}\" character",
        "program": "}",
        "expected messages": [
            {
                "message level": 2,
                "error code": "CURVLY_BRACKETS_EXPECTED",
                "line #": 1,
                "message": "'}' not expected without a '{'."
            }
        ],
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST"
                }
            ]
        }
    },

    // Try an empty package
    {
        //"verbose": true,
        "name": "empty package",
        "program": "package name { }",
        "result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "PACKAGE",
                            "label": "name",
                            "children": [
                                {
                                    "node type": "DIRECTIVE_LIST"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }

]
// end
// vim: ts=4 sw=4 et
