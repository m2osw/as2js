// function
//
use extended_operators;

extern const x: Double;
extern const y: Double;
extern const z: Integer;

extern var r_e: Double;
extern var r_ln10: Double;
extern var r_ln2: Double;
extern var r_log2e: Double;
extern var r_log10e: Double;
extern var r_pi: Double;
extern var r_sqrt1_2: Double;
extern var r_sqrt2: Double;

extern var r_abs_floating_point: Double;
extern var r_abs_integer: Integer;
extern var r_abs_x: Double;
extern var r_abs_y: Double;
extern var r_abs_z: Integer;

extern var r_min_floating_point_empty: Double;
extern var r_min_floating_point_one: Double;
extern var r_min_floating_point_two: Double;
extern var r_min_floating_point_four: Double;
extern var r_min_floating_point_mix1: Double;
extern var r_min_floating_point_mix2: Double;
extern var r_min_floating_point_mix3: Double;

extern var r_max_floating_point_empty: Double;
extern var r_max_floating_point_one: Double;
extern var r_max_floating_point_two: Double;
extern var r_max_floating_point_four: Double;
extern var r_max_floating_point_mix1: Double;
extern var r_max_floating_point_mix2: Double;
extern var r_max_floating_point_mix3: Double;

extern var r_min_integer_one: Integer;
extern var r_min_integer_two: Integer;
extern var r_min_integer_four: Integer;

extern var r_max_integer_one: Integer;
extern var r_max_integer_two: Integer;
extern var r_max_integer_four: Integer;

r_ln10 := Math.LN10;
r_ln2 := Math.LN2;
r_log2e := Math.LOG2E;
r_log10e := Math.LOG10E;
r_pi := Math.PI;
r_sqrt1_2 := Math.SQRT1_2;
r_sqrt2 := Math.SQRT2;

// some special cases where integers do not get transformed to numbers
//
r_abs_floating_point := Math.abs(-56.3);
r_abs_integer := Math.abs(-13);
r_abs_x := Math.abs(x);
r_abs_y := Math.abs(y);
r_abs_z := Math.abs(z);

r_min_floating_point_empty := Math.min();
r_min_floating_point_one := Math.min(31.07);
r_min_floating_point_two := Math.min(x, y);
r_min_floating_point_four := Math.min(x, 31.07, y, -9.004);
r_min_floating_point_mix1 := Math.min(5, x, 31.07, y, -9.004, z, 100.3);
r_min_floating_point_mix2 := Math.min(5, 31.07);
r_min_floating_point_mix3 := Math.min(31.07, 5);

r_max_floating_point_empty := Math.max();
r_max_floating_point_one := Math.max(31.07);
r_max_floating_point_two := Math.max(x, y);
r_max_floating_point_four := Math.max(x, 31.07, y, -9.004);
r_max_floating_point_mix1 := Math.max(5, x, 31.07, y, -9.004, z, 100.3);
r_max_floating_point_mix2 := Math.max(5.3, x, 31.07, y, 9004, z, 100.3);
r_max_floating_point_mix3 := Math.max(-15013.35, -9004, z, -7777, -31431.07);

r_min_integer_one := Math.min(z);
r_min_integer_two := Math.min(34, z);
r_min_integer_four := Math.min(-10000, z, 55000, 333);

r_max_integer_one := Math.max(z);
r_max_integer_two := Math.max(34, z);
r_max_integer_four := Math.max(-10000, z, 55000, 333);

// last returns the (result)
r_e := Math.E;
