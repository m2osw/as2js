// conditional
//
use extended_operators;

extern const x: Boolean;
extern const y: Boolean;

extern var r_x_equal_x: Boolean;
extern var r_x_equal_y: Boolean;
extern var r_y_equal_x: Boolean;
extern var r_y_equal_y: Boolean;
extern var r_x_strictly_equal_x: Boolean;
extern var r_x_strictly_equal_y: Boolean;
extern var r_y_strictly_equal_x: Boolean;
extern var r_y_strictly_equal_y: Boolean;

extern var r_x_smart_match_x: Boolean;
extern var r_x_smart_match_y: Boolean;
extern var r_y_smart_match_x: Boolean;
extern var r_y_smart_match_y: Boolean;

extern var r_x_not_equal_x: Boolean;
extern var r_x_not_equal_y: Boolean;
extern var r_y_not_equal_x: Boolean;
extern var r_y_not_equal_y: Boolean;
extern var r_x_strictly_not_equal_x: Boolean;
extern var r_x_strictly_not_equal_y: Boolean;
extern var r_y_strictly_not_equal_x: Boolean;
extern var r_y_strictly_not_equal_y: Boolean;

extern var r_x_less_x: Boolean;
extern var r_x_less_y: Boolean;
extern var r_y_less_x: Boolean;
extern var r_y_less_y: Boolean;
extern var r_x_less_equal_x: Boolean;
extern var r_x_less_equal_y: Boolean;
extern var r_y_less_equal_x: Boolean;
extern var r_y_less_equal_y: Boolean;

extern var r_x_greater_x: Boolean;
extern var r_x_greater_y: Boolean;
extern var r_y_greater_x: Boolean;
extern var r_y_greater_y: Boolean;
extern var r_x_greater_equal_x: Boolean;
extern var r_x_greater_equal_y: Boolean;
extern var r_y_greater_equal_x: Boolean;
extern var r_y_greater_equal_y: Boolean;

extern var r_x_compare_x: Integer;
extern var r_x_compare_y: Integer;
extern var r_y_compare_x: Integer;
extern var r_y_compare_y: Integer;

extern var r_not_x: Boolean;
extern var r_not_y: Boolean;

extern var r_not_not_x: Boolean;
extern var r_not_not_y: Boolean;

r_x_equal_x := x == x;
//r_x_equal_y := x == y; -- last line
r_y_equal_x := y == x;
r_y_equal_y := y == y;
r_x_strictly_equal_x := x === x;
r_x_strictly_equal_y := x === y;
r_y_strictly_equal_x := y === x;
r_y_strictly_equal_y := y === y;

r_x_smart_match_x := x ~~ x;
r_x_smart_match_y := x ~~ y;
r_y_smart_match_x := y ~~ x;
r_y_smart_match_y := y ~~ y;

r_x_not_equal_x := x != x;
r_x_not_equal_y := x != y;
r_y_not_equal_x := y != x;
r_y_not_equal_y := y != y;
r_x_strictly_not_equal_x := x !== x;
r_x_strictly_not_equal_y := x !== y;
r_y_strictly_not_equal_x := y !== x;
r_y_strictly_not_equal_y := y !== y;

r_x_less_x := x < x;
r_x_less_y := x < y;
r_y_less_x := y < x;
r_y_less_y := y < y;
r_x_less_equal_x := x <= x;
r_x_less_equal_y := x <= y;
r_y_less_equal_x := y <= x;
r_y_less_equal_y := y <= y;

r_x_greater_x := x > x;
r_x_greater_y := x > y;
r_y_greater_x := y > x;
r_y_greater_y := y > y;
r_x_greater_equal_x := x >= x;
r_x_greater_equal_y := x >= y;
r_y_greater_equal_x := y >= x;
r_y_greater_equal_y := y >= y;

r_x_compare_x := x <=> x;
r_x_compare_y := x <=> y;
r_y_compare_x := y <=> x;
r_y_compare_y := y <=> y;

r_not_x := !x;
r_not_y := !y;

r_not_not_x := !!x;
r_not_not_y := !!y;

// last returns the (result)
r_x_equal_y := x == y;
