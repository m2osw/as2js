// logical
[

    // !true => false
    {
        //"verbose": true,
        "name": "!true -> false",
        "program": "!true;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "TRUE"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FALSE"
                        }
                    ]
                }
            ]
        }
    },

    // !false => true
    {
        //"verbose": true,
        "name": "!false -> true",
        "program": "!false;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "FALSE"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRUE"
                        }
                    ]
                }
            ]
        }
    },

    // !null => true
    {
        //"verbose": true,
        "name": "!null -> true",
        "program": "!null;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "NULL"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRUE"
                        }
                    ]
                }
            ]
        }
    },

    // !undefined => true
    {
        //"verbose": true,
        "name": "!undefined -> true",
        "program": "!undefined;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "UNDEFINED"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRUE"
                        }
                    ]
                }
            ]
        }
    },

    // !0 => true
    {
        //"verbose": true,
        "name": "!0 -> true",
        "program": "!0;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRUE"
                        }
                    ]
                }
            ]
        }
    },

    // !65 => false
    {
        //"verbose": true,
        "name": "!65 -> false",
        "program": "!65;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 65
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FALSE"
                        }
                    ]
                }
            ]
        }
    },

    // !0.0 => true
    {
        //"verbose": true,
        "name": "!0.0 -> true",
        "program": "!0.0;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 0.0
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRUE"
                        }
                    ]
                }
            ]
        }
    },

    // !6.5 => false
    {
        //"verbose": true,
        "name": "!6.5 -> false",
        "program": "!6.5;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 6.5
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FALSE"
                        }
                    ]
                }
            ]
        }
    },

    // !"" => true
    {
        //"verbose": true,
        "name": "!\"\" -> true",
        "program": "!\"\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": ""
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRUE"
                        }
                    ]
                }
            ]
        }
    },

    // !"empty" => false
    {
        //"verbose": true,
        "name": "!\"empty\" -> false",
        "program": "!\"empty\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "empty"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FALSE"
                        }
                    ]
                }
            ]
        }
    },

    // !!!a => !a
    {
        //"verbose": true,
        "name": "!!!a -> !a",
        "program": "!!!a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "LOGICAL_NOT",
                                    "children": [
                                        {
                                            "node type": "LOGICAL_NOT",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "a"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_NOT",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // true && a => a
    {
        //"verbose": true,
        "name": "true && a -> a",
        "program": "true && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "TRUE"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // "true" && a => a
    {
        //"verbose": true,
        "name": "\"true\" && a -> a",
        "program": "\"true\" && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "true"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // 104 && a => a
    {
        //"verbose": true,
        "name": "104 && a -> a",
        "program": "104 && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 104
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // 1.04 && a => a
    {
        //"verbose": true,
        "name": "1.04 && a -> a",
        "program": "1.04 && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 1.04
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // false && a => false
    {
        //"verbose": true,
        "name": "false && a -> false",
        "program": "false && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "FALSE"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FALSE"
                        }
                    ]
                }
            ]
        }
    },

    // '' && a => ''
    {
        //"verbose": true,
        "name": "'' && a -> ''",
        "program": "'' && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": ""
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "STRING",
                            "label": ""
                        }
                    ]
                }
            ]
        }
    },

    // 0 && a => 0
    {
        //"verbose": true,
        "name": "0 && a -> 0",
        "program": "0 && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 0
                        }
                    ]
                }
            ]
        }
    },

    // 0.0 && a => 0.0
    {
        //"verbose": true,
        "name": "0.0 && a -> 0.0",
        "program": "0.0 && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 0.0
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FLOAT64",
                            "float": 0.0
                        }
                    ]
                }
            ]
        }
    },

    // null && a => null
    {
        //"verbose": true,
        "name": "null && a -> null",
        "program": "null && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "NULL"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "NULL"
                        }
                    ]
                }
            ]
        }
    },

    // undefined && a => undefined
    {
        //"verbose": true,
        "name": "undefined && a -> undefined",
        "program": "undefined && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "UNDEFINED"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "UNDEFINED"
                        }
                    ]
                }
            ]
        }
    },

    // undefined && a => undefined
    {
        //"verbose": true,
        "name": "undefined && a -> undefined",
        "program": "undefined && a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_AND",
                            "children": [
                                {
                                    "node type": "UNDEFINED"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "UNDEFINED"
                        }
                    ]
                }
            ]
        }
    },

    // true || a => true
    {
        //"verbose": true,
        "name": "true || a -> true",
        "program": "true || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "TRUE"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRUE"
                        }
                    ]
                }
            ]
        }
    },

    // "true" || a => "true"
    {
        //"verbose": true,
        "name": "\"true\" || a -> a",
        "program": "\"true\" || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "true"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "STRING",
                            "label": "true"
                        }
                    ]
                }
            ]
        }
    },

    // 104 || a => 104
    {
        //"verbose": true,
        "name": "104 || a -> 104",
        "program": "104 || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 104
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 104
                        }
                    ]
                }
            ]
        }
    },

    // 1.04 || a => 1.04
    {
        //"verbose": true,
        "name": "1.04 || a -> 1.04",
        "program": "1.04 || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 1.04
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FLOAT64",
                            "float": 1.04
                        }
                    ]
                }
            ]
        }
    },

    // false || a => a
    {
        //"verbose": true,
        "name": "false || a -> a",
        "program": "false || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "FALSE"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // '' || a => a
    {
        //"verbose": true,
        "name": "'' || a -> a",
        "program": "'' || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": ""
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // 0 || a => a
    {
        //"verbose": true,
        "name": "0 || a -> a",
        "program": "0 || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // 0.0 || a => a
    {
        //"verbose": true,
        "name": "0.0 || a -> a",
        "program": "0.0 || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 0.0
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // null || a => a
    {
        //"verbose": true,
        "name": "null || a -> a",
        "program": "null || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "NULL"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // undefined || a => a
    {
        //"verbose": true,
        "name": "undefined || a -> a",
        "program": "undefined || a;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "UNDEFINED"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IDENTIFIER",
                            "label": "a"
                        }
                    ]
                }
            ]
        }
    },

    // true ^^ true => false
    {
        //"verbose": true,
        "name": "true ^^ true -> false",
        "program": "use extended_operators; true ^^ true;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "TRUE"
                                },
                                {
                                    "node type": "TRUE"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FALSE"
                        }
                    ]
                }
            ]
        }
    },

    // false ^^ false => false
    {
        //"verbose": true,
        "name": "false ^^ false -> false",
        "program": "use extended_operators; false ^^ false;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "FALSE"
                                },
                                {
                                    "node type": "FALSE"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FALSE"
                        }
                    ]
                }
            ]
        }
    },

    // false ^^ true => true
    {
        //"verbose": true,
        "name": "false ^^ true -> true",
        "program": "use extended_operators; false ^^ true;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "FALSE"
                                },
                                {
                                    "node type": "TRUE"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRUE"
                        }
                    ]
                }
            ]
        }
    },

    // true ^^ false => true
    {
        //"verbose": true,
        "name": "true ^^ false -> true",
        "program": "use extended_operators; true ^^ false;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "TRUE"
                                },
                                {
                                    "node type": "FALSE"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "TRUE"
                        }
                    ]
                }
            ]
        }
    },

    // 1.33 ^^ false => 1.33
    {
        //"verbose": true,
        "name": "1.33 ^^ false -> 1.33",
        "program": "use extended_operators; 1.33 ^^ false;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "FLOAT64",
                                    "float": 1.33
                                },
                                {
                                    "node type": "FALSE"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FLOAT64",
                            "float": 1.33
                        }
                    ]
                }
            ]
        }
    },

    // null ^^ 45 => 45
    {
        //"verbose": true,
        "name": "null ^^ 45 -> 45",
        "program": "use extended_operators; null ^^ 45;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "NULL"
                                },
                                {
                                    "node type": "INT64",
                                    "integer": 45
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "INT64",
                            "integer": 45
                        }
                    ]
                }
            ]
        }
    },

    // "here" ^^ undefined => "here"
    {
        //"verbose": true,
        "name": "\"here\" ^^ undefined -> \"here\"",
        "program": "use extended_operators; \"here\" ^^ undefined;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "here"
                                },
                                {
                                    "node type": "UNDEFINED"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "STRING",
                            "label": "here"
                        }
                    ]
                }
            ]
        }
    },

    // 0 ^^ "here" => "here"
    {
        //"verbose": true,
        "name": "0 ^^ \"here\" -> \"here\"",
        "program": "use extended_operators; 0 ^^ \"here\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                },
                                {
                                    "node type": "STRING",
                                    "label": "here"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "STRING",
                            "label": "here"
                        }
                    ]
                }
            ]
        }
    },

    // 0 ^^ 0.0 => false
    {
        //"verbose": true,
        "name": "0 ^^ 0.0 -> false",
        "program": "use extended_operators; 0 ^^ 0.0;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "INT64",
                                    "integer": 0
                                },
                                {
                                    "node type": "FLOAT64",
                                    "float": 0.0
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FALSE"
                        }
                    ]
                }
            ]
        }
    },

    // "too" ^^ "much" => false
    {
        //"verbose": true,
        "name": "\"too\" ^^ \"much\" -> false",
        "program": "use extended_operators; \"too\" ^^ \"much\";",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_XOR",
                            "children": [
                                {
                                    "node type": "STRING",
                                    "label": "too"
                                },
                                {
                                    "node type": "STRING",
                                    "label": "much"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FALSE"
                        }
                    ]
                }
            ]
        }
    },

    // if(!a) b else c => if(a) c else b
    {
        //"verbose": true,
        "name": "if(!a) b else c -> if(a) c else b",
        "program": "if(!a) { b = q + 3; } else c;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IF",
                            "children": [
                                {
                                    "node type": "LOGICAL_NOT",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "a"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "DIRECTIVE_LIST",
                                            "children": [
                                                {
                                                    "node type": "ASSIGNMENT",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "b"
                                                        },
                                                        {
                                                            "node type": "ADD",
                                                            "children": [
                                                                {
                                                                    "node type": "IDENTIFIER",
                                                                    "label": "q"
                                                                },
                                                                {
                                                                    "node type": "INT64",
                                                                    "integer": 3
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "c"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IF",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "c"
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "ASSIGNMENT",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "b"
                                                },
                                                {
                                                    "node type": "ADD",
                                                    "children": [
                                                        {
                                                            "node type": "IDENTIFIER",
                                                            "label": "q"
                                                        },
                                                        {
                                                            "node type": "INT64",
                                                            "integer": 3
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // if(!!a) => if(a)
    {
        //"verbose": true,
        "name": "if(!!a) -> if(a)",
        "program": "if(!!a) b += 5;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IF",
                            "children": [
                                {
                                    "node type": "LOGICAL_NOT",
                                    "children": [
                                        {
                                            "node type": "LOGICAL_NOT",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "a"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "ASSIGNMENT_ADD",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "b"
                                                },
                                                {
                                                    "node type": "INT64",
                                                    "integer": 5
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "IF",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "ASSIGNMENT_ADD",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "b"
                                                },
                                                {
                                                    "node type": "INT64",
                                                    "integer": 5
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // while(!!a) => while(a)
    {
        //"verbose": true,
        "name": "while(!!a) -> while(a)",
        "program": "while(!!a) b;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "WHILE",
                            "children": [
                                {
                                    "node type": "LOGICAL_NOT",
                                    "children": [
                                        {
                                            "node type": "LOGICAL_NOT",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "a"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "b"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "WHILE",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "b"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // for(a; !!b; c) d => for(a; b; c) d
    {
        //"verbose": true,
        "name": "for(a; !!b; c) d -> for(a; b; c) d",
        "program": "for(a; !!b; c) d;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FOR",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "LOGICAL_NOT",
                                    "children": [
                                        {
                                            "node type": "LOGICAL_NOT",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "b"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "c"
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "d"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "FOR",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "b"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "c"
                                },
                                {
                                    "node type": "DIRECTIVE_LIST",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "d"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // !!a ? b : c => a ? b : c
    {
        //"verbose": true,
        "name": "!!a ? b : c -> a ? b : c",
        "program": "!!a ? b : c;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CONDITIONAL",
                            "children": [
                                {
                                    "node type": "LOGICAL_NOT",
                                    "children": [
                                        {
                                            "node type": "LOGICAL_NOT",
                                            "children": [
                                                {
                                                    "node type": "IDENTIFIER",
                                                    "label": "a"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "b"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "c"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CONDITIONAL",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "b"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "c"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    },

    // a && b || c => a ? b : c
    {
        //"verbose": true,
        "name": "a && b || c -> a ? b : c",
        "program": "a && b || c;",
        "parser result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "LOGICAL_OR",
                            "children": [
                                {
                                    "node type": "LOGICAL_AND",
                                    "children": [
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "a"
                                        },
                                        {
                                            "node type": "IDENTIFIER",
                                            "label": "b"
                                        }
                                    ]
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "c"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "optimizer result": {
            "node type": "PROGRAM",
            "children": [
                {
                    "node type": "DIRECTIVE_LIST",
                    "children": [
                        {
                            "node type": "CONDITIONAL",
                            "children": [
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "a"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "b"
                                },
                                {
                                    "node type": "IDENTIFIER",
                                    "label": "c"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    }

// TODO:
// Once we support types properly we can look into supporting some
// "!!a" <=> "a" optimizations; we may also want to look into a
// way to support such optimization whenever the expression is used
// in a boolean context such as "if(!!a)" <=> "if(a)"

]
// vim: ts=4 sw=4 et
